<Page x:Name="page" x:Class="ArrayPlayground.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:converters="using:Template10.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:ArrayPlayground.Views"
      xmlns:models="using:ArrayPlayground.Models"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:ArrayPlayground.ViewModels" mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converters:StringFormatConverter x:Key="SummaryConverter"/>
    </Page.Resources>
    
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" VerticalAlignment="Stretch">
        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change properties for narrow view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change propeхэщrties for normal view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change properties for wide view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->

        <Pivot Title="Массив PlAYGROUND" Background="{StaticResource AppBarBackgroundThemeBrush}">
            <Pivot.TitleTemplate>
                <DataTemplate>
                    <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{Binding}"/>
                </DataTemplate>
            </Pivot.TitleTemplate>

            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Style="{StaticResource SubheaderTextBlockStyle}" Text="{Binding}" Padding="0 0 0 0"/>
                </DataTemplate>
            </Pivot.HeaderTemplate>

            <PivotItem Header="Ввод данных" Margin="0" Background="#FFE5E5E5" >
                <RelativePanel>
                    <Rectangle x:Name="InputBelt" 
                               RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignTopWithPanel="True"
                               Style="{StaticResource AppHeaderBeltRectangleStyle}"
                               StrokeThickness="0"/>
                    <ScrollViewer Padding="10 30" VerticalScrollMode="Enabled" VerticalScrollBarVisibility="Visible"
                                  RelativePanel.Below="InputBelt" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignBottomWithPanel="True">
                        <RelativePanel>
                            <TextBlock x:Name="ArrayTitle"
                                       Text="Массив" Style="{StaticResource TitleTextBlockStyle}"
                                       RelativePanel.AlignTopWithPanel="True"/>

                            <ListBox x:Name="AddingItems" TabNavigation="Local"
                                     ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}" SelectedIndex="{x:Bind ViewModel.SelectedIndex, Mode=TwoWay}"
                                     Margin="0" Background="Transparent" IsTabStop="False"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollMode="Enabled"
                                     RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="ArrayTitle">

                                <Interactivity:Interaction.Behaviors>
                                    <Behaviors:KeyBehavior AndShift="True" Key="Tab" >
                                        <Core:CallMethodAction TargetObject="{x:Bind ViewModel}" MethodName="Prevy"/>
                                    </Behaviors:KeyBehavior>

                                    <Behaviors:KeyBehavior Key="Tab">
                                        <Core:CallMethodAction TargetObject="{x:Bind ViewModel}" MethodName="Nexty"/>
                                    </Behaviors:KeyBehavior>
                                </Interactivity:Interaction.Behaviors>

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel HorizontalAlignment="Left"
                                                                Orientation="Horizontal" AreScrollSnapPointsRegular="True" VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="IsTabStop" Value="False"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                
                                <ListBox.ItemTemplate>
                                    <DataTemplate x:DataType="models:ArrayItem">
                                        <TextBox x:Name="EditBox" Text="{x:Bind Value, Mode=OneWay}" Style="{StaticResource InputTextBox}"
                                                 HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                                 GotFocus="EditBox_GotFocus"
                                                     >
                                        </TextBox>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <Button Click="{x:Bind ViewModel.Shuffle}" RelativePanel.Above="AddingItems" RelativePanel.AlignRightWith="AddingItems">
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Shuffle"/>
                                    <TextBlock Text="Shuffle" Margin="5 0 0 0"/>
                                </StackPanel>
                            </Button>

                            <VariableSizedWrapGrid RelativePanel.Below="AddingItems" Orientation="Horizontal" RelativePanel.AlignHorizontalCenterWithPanel="True">
                                <StackPanel Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="Button" BasedOn="{StaticResource HubButtonStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Заполнено
                                    </ListViewHeaderItem>

                                    <TextBlock Text="{x:Bind ViewModel.Items.Count, Mode=OneWay, Converter={StaticResource SummaryConverter}, ConverterParameter=Заполнено: \{0\}}"/>
                                    <Button Content="В начало"/>
                                    <Button Content="Перед выбранным"/>
                                    <Button Content="После выбранного"/>
                                </StackPanel>

                                <StackPanel Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="Button" BasedOn="{StaticResource HubButtonStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Добавить
                                    </ListViewHeaderItem>

                                    <Button Content="В конец"/>
                                    <Button Content="В начало"/>
                                    <Button Content="Перед выбранным"/>
                                    <Button Content="После выбранного"/>
                                </StackPanel>

                                <StackPanel Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="Button" BasedOn="{StaticResource HubButtonStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Удалить
                                    </ListViewHeaderItem>

                                    <Button Content="Выбранный"/>
                                    <Button Content="Очистить все"/>
                                    <Button Content="Удалить все"/>
                                </StackPanel>

                                <StackPanel Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="Button" BasedOn="{StaticResource HubButtonStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Заполнить
                                    </ListViewHeaderItem>

                                    <Button Content="Из файла..."/>
                                    <Button Content="Случайно..."/>
                                </StackPanel>


                            </VariableSizedWrapGrid>
                        </RelativePanel>
                    </ScrollViewer>
                </RelativePanel>
            </PivotItem>

            <PivotItem Header="Поиск">

            </PivotItem>

            <PivotItem Header="Построить дерево">

            </PivotItem>

            <PivotItem Header="Настройки">

            </PivotItem>
        </Pivot>
    </RelativePanel>
</Page>

