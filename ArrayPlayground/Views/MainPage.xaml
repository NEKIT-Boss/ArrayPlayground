<Page x:Name="page" x:Class="ArrayPlayground.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:converters="using:Template10.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:ArrayPlayground.Views"
      xmlns:models="using:ArrayPlayground.Models"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:ArrayPlayground.ViewModels" mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converters:StringFormatConverter x:Key="SummaryConverter"/>
        <converters:ValueWhenConverter x:Key="LastIndexToBoolean">
            <converters:ValueWhenConverter.When>
                <x:Int32>1</x:Int32>
            </converters:ValueWhenConverter.When>
            
            <converters:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.Value>

            <converters:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>
    </Page.Resources>

    <RelativePanel Background="{StaticResource ContentBackground}" >
        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change properties for narrow view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change propeхэщrties for normal view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        -->
        <!--  TODO: change properties for wide view  -->
        <!--
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->

        <Pivot Title="Массив PlAYGROUND" Background="{StaticResource AppBarBackgroundThemeBrush}">
            <Pivot.TitleTemplate>
                <DataTemplate>
                    <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{Binding}"/>
                </DataTemplate>
            </Pivot.TitleTemplate>

            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Style="{StaticResource SubheaderTextBlockStyle}" Text="{Binding}" Padding="0 0 0 0"/>
                </DataTemplate>
            </Pivot.HeaderTemplate>

            <Pivot.Resources>
                <Style TargetType="PivotItem">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Background" Value="{StaticResource ContentBackground}"/>
                </Style>
            </Pivot.Resources>

            <PivotItem Header="Ввод данных">
                <RelativePanel>
                    <Rectangle x:Name="InputBelt" 
                               RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignTopWithPanel="True"
                               Style="{StaticResource AppHeaderBeltRectangleStyle}"
                               />
                    <ScrollViewer Margin="10 5" VerticalScrollMode="Enabled" VerticalScrollBarVisibility="Auto"
                                  RelativePanel.Below="InputBelt" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignBottomWithPanel="True"
                                  Padding="0 20 15 0">
                        <RelativePanel>
                            <TextBlock x:Name="ArrayTitle"
                                       Text="Массив" Style="{StaticResource TitleTextBlockStyle}"
                                       RelativePanel.AlignTopWithPanel="True"/>

                            <ListBox x:Name="AddingItems" TabNavigation="Local"
                                     ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}" SelectedIndex="{x:Bind ViewModel.SelectedIndex, Mode=TwoWay}"
                                     Margin="0" Background="Transparent"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollMode="Enabled"
                                     RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="ArrayTitle"
                                     SelectionChanged="AddingItems_SelectionChanged" KeyDown="AddingItems_KeyDown">
                                
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel HorizontalAlignment="Left"
                                                                Orientation="Horizontal" AreScrollSnapPointsRegular="True" VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0 20 20 20"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                
                                <ListBox.ItemTemplate>
                                    <DataTemplate x:DataType="models:ArrayItem">
                                        <!-- Unsolved issue, need to change selection when selecting another textbox
                                             IDK what solution to tkae mb tag, mb code behind, actually code behind makes much more sense
                                             When get familiar will change that to behavior -->
                                        <TextBox x:Name="EditBox" Text="{x:Bind Value, Mode=TwoWay}" Style="{StaticResource InputTextBox}"
                                                 HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                                 GotFocus="EditBox_GotFocus"
                                                 >
                                        </TextBox>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <Button RelativePanel.Above="AddingItems" RelativePanel.AlignRightWith="AddingItems">
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Sort"/>
                                    <TextBlock Text="Отсортировать" Margin="5 0 0 0"/>
                                </StackPanel>
                            </Button>

                            <VariableSizedWrapGrid RelativePanel.Below="AddingItems" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" Orientation="Horizontal" ItemHeight="{Binding ActualHeight, ElementName=AddingColumn, Mode=OneTime}" Margin="0 40 0 0">
                                <StackPanel Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="TextBlock" BasedOn="{StaticResource SummaryTextBlockStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Заполнено
                                    </ListViewHeaderItem>

                                    <TextBlock Text="{x:Bind ViewModel.Items.Count, Mode=OneWay, Converter={StaticResource SummaryConverter}, ConverterParameter=Заполнено элементов: \{0\}}"/>
                                    <TextBlock Text="{x:Bind ViewModel.SelectedIndex, Mode=OneWay, Converter={StaticResource SummaryConverter}, ConverterParameter=Выбранный элемент: \{0\}}"/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Отсортированы: "/>
                                        <SymbolIcon Symbol="Accept" VerticalAlignment="Top" Foreground="Green" Margin="10 0 0 0">
                                            <SymbolIcon.RenderTransform>
                                                <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>

                                            </SymbolIcon.RenderTransform>
                                        </SymbolIcon>
                                    </StackPanel>
                                </StackPanel>

                                <StackPanel x:Name="AddingColumn" Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="Button" BasedOn="{StaticResource HubButtonStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Добавить
                                    </ListViewHeaderItem>

                                    <Button Content="В конец" Click="{x:Bind ViewModel.AddBack}"/>
                                    <Button Content="В начало" Click="{x:Bind ViewModel.AddFront}"/>
                                    <Button Content="Перед выбранным" Click="{x:Bind ViewModel.AddBefore}"/>
                                    <Button Content="После выбранного" Click="{x:Bind ViewModel.AddAfter}"/>
                                </StackPanel>

                                <StackPanel Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="Button" BasedOn="{StaticResource HubButtonStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Удалить
                                    </ListViewHeaderItem>

                                    <Button Content="Выбранный" Command="{x:Bind ViewModel.RemoveSelectedCommand}"/>
                                    <Button Content="Очистить все" Click="{x:Bind ViewModel.ClearAll}"/>
                                    <Button Content="Удалить все" Command="{x:Bind ViewModel.RemoveAllCommand}"/>
                                </StackPanel>

                                <StackPanel Style="{StaticResource ButtonsStackStyle}">
                                    <StackPanel.Resources>
                                        <Style  TargetType="Button" BasedOn="{StaticResource HubButtonStyle}"/>
                                    </StackPanel.Resources>

                                    <ListViewHeaderItem Style="{StaticResource ButtonsStackHeaderStyle}">
                                        Заполнить
                                    </ListViewHeaderItem>

                                    <Button Content="Из файла..."/>
                                    <Button Content="Случайно..."/>
                                </StackPanel>
                            </VariableSizedWrapGrid>
                        </RelativePanel>
                    </ScrollViewer>
                </RelativePanel>
            </PivotItem>

            <PivotItem Header="Поиск" VerticalContentAlignment="Stretch">
                
            </PivotItem>

            <PivotItem Header="Построить дерево">

            </PivotItem>

            <PivotItem Header="Настройки">

            </PivotItem>
        </Pivot>
    </RelativePanel>
</Page>

